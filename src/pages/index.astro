---
import AppShell from "../layouts/AppShell.astro";
import dayjs from "dayjs";
import { getCollection } from "astro:content";

const writingEntries = (await getCollection("writing", ({ data }) => !data.draft)).sort(
  (a, b) => b.data.date.getTime() - a.data.date.getTime()
);
const latestWriting = writingEntries.slice(0, 3);

const projectEntries = (await getCollection("projects", ({ data }) => !data.draft)).sort(
  (a, b) => b.data.date.getTime() - a.data.date.getTime()
);
const latestProjects = projectEntries.slice(0, 3);
---

<AppShell>
  <fragment slot="head">
    <title>Ashton Hawkins · Builder, designer, and systems thinker</title>
    <meta
      name="description"
      content="Creative technologist building thoughtful products across web, AI, and live experiences."
    />
  </fragment>
  <section class="grid gap-16">
    <div class="grid gap-10 rounded-[32px] border border-border/60 bg-surface/60 p-10 shadow-soft md:grid-cols-[1.2fr,1fr]">
      <div class="space-y-6">
        <p class="text-sm uppercase tracking-[0.3em] text-text-muted">Hello, I’m Ashton</p>
        <h1 class="text-4xl font-semibold leading-tight md:text-5xl">
          I design and build delightful software, orchestration systems, and creative tools.
        </h1>
        <p class="max-w-prose text-lg text-text-secondary">
          Currently shipping at the intersection of product, engineering, and storytelling. I craft
          experiences that feel alive—fast, tactile, and welcoming. This site documents the work,
          experiments, and ideas along the way.
        </p>
        <div class="flex flex-wrap gap-3 text-sm">
          <a
            href="/projects"
            class="rounded-full border border-border bg-background px-5 py-2 font-medium text-text-primary transition hover:border-accent hover:bg-accent-soft hover:text-accent"
            data-astro-transition="animate"
          >
            Explore projects
          </a>
          <a
            href="/writing"
            class="rounded-full border border-border/70 px-5 py-2 font-medium text-text-secondary transition hover:border-accent hover:text-text-primary"
            data-astro-transition="animate"
          >
            Read the latest writing
          </a>
        </div>
      </div>
      <div class="flex h-full flex-col justify-between gap-6 rounded-3xl border border-border/40 bg-background/70 p-6 text-sm text-text-secondary shadow-ring">
        <div>
          <h2 class="text-xs font-semibold uppercase tracking-[0.3em] text-text-muted">Now</h2>
          <p class="mt-3 leading-relaxed">
            I’m deep in prototyping mode—building research tools for independent teams, exploring
            spatial interfaces, and writing about sustainable pace.
          </p>
        </div>
        <a
          href="/now"
          class="inline-flex items-center gap-2 self-start rounded-full bg-accent text-sm font-semibold text-text-inverted transition hover:bg-accent-strong"
          data-astro-transition="animate"
        >
          <span class="px-4 py-2">Read the full now page</span>
        </a>
      </div>
    </div>

    <section class="grid gap-12 md:grid-cols-[2fr,1.2fr]">
      <div class="space-y-6">
        <header class="flex items-center justify-between">
          <h2 class="text-2xl font-semibold">Latest writing</h2>
          <a href="/writing" class="text-sm text-text-muted transition hover:text-accent" data-astro-transition="animate">
            View all
          </a>
        </header>
        <div class="grid gap-5">
          {latestWriting.length ? (
            latestWriting.map((entry) => (
              <article
                class="group rounded-3xl border border-border/60 bg-surface/80 p-6 shadow-soft transition hover:-translate-y-1 hover:border-accent"
              >
                <a
                  href={`/writing/${entry.slug}`}
                  class="grid gap-3"
                  data-astro-transition="animate"
                >
                  <span class="text-xs uppercase tracking-[0.3em] text-text-muted">
                    {dayjs(entry.data.date).format("MMM D, YYYY")}
                  </span>
                  <h3 class="text-xl font-semibold">{entry.data.title}</h3>
                  <p class="text-sm text-text-secondary">{entry.data.summary}</p>
                  <div class="flex flex-wrap gap-2">
                    {entry.data.tags.map((tag) => (
                      <span class="rounded-full bg-accent-soft px-3 py-1 text-xs font-medium text-accent" aria-label={`Tagged ${tag}`}>
                        #{tag}
                      </span>
                    ))}
                  </div>
                </a>
              </article>
            ))
          ) : (
            <p class="text-sm text-text-muted">Writing is brewing. Check back soon!</p>
          )}
        </div>
      </div>
      <div class="space-y-6">
        <header class="flex items-center justify-between">
          <h2 class="text-2xl font-semibold">Projects in motion</h2>
          <a href="/projects" class="text-sm text-text-muted transition hover:text-accent" data-astro-transition="animate">
            View all
          </a>
        </header>
        <div class="grid gap-5">
          {latestProjects.length ? (
            latestProjects.map((entry) => (
              <article
                class="group rounded-3xl border border-border/60 bg-surface/80 p-6 shadow-soft transition hover:-translate-y-1 hover:border-accent"
              >
                <a
                  href={`/projects/${entry.slug}`}
                  class="grid gap-3"
                  data-astro-transition="animate"
                >
                  <span class="text-xs uppercase tracking-[0.3em] text-text-muted">
                    {dayjs(entry.data.date).format("MMM YYYY")}
                  </span>
                  <h3 class="text-xl font-semibold">{entry.data.title}</h3>
                  <p class="text-sm text-text-secondary">{entry.data.summary}</p>
                  <div class="flex items-center justify-between text-xs text-text-muted">
                    <span class="rounded-full bg-border/40 px-3 py-1 uppercase tracking-wide text-[10px]">
                      {entry.data.status}
                    </span>
                    {entry.data.tags.length ? (
                      <span>{entry.data.tags.join(" · ")}</span>
                    ) : null}
                  </div>
                </a>
              </article>
            ))
          ) : (
            <p class="text-sm text-text-muted">Projects are being archived. More soon.</p>
          )}
        </div>
      </div>
    </section>
  </section>
</AppShell>
