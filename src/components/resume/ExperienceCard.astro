---
interface Scope {
  team: string;
  budget: string;
  surfaces: string;
}

interface CaseStudyLink {
  id: string;
  title: string;
  url: string;
}

interface ExperienceWithComputed {
  id: string;
  org_public: string;
  org_confidential: string;
  role_public: string;
  role_confidential: string;
  start?: string | null;
  end?: string | null;
  scope: Scope;
  impacts: string[];
  tags: string[];
  caseStudies: CaseStudyLink[];
  rangePublic: string;
  rangeConfidential: string;
}

const { experience } = Astro.props as {
  experience: ExperienceWithComputed;
};

const scopeLine = [experience.scope.team, experience.scope.budget, experience.scope.surfaces]
  .filter(Boolean)
  .join(" â€¢ ");
---

<details
  class="group flex flex-col gap-4 rounded-2xl border border-border/70 bg-background/80 p-6 shadow-soft transition-transform duration-100 ease-out open:shadow-ring hover:-translate-y-1 hover:shadow-ring"
  data-experience-card
  data-tags={experience.tags.join(",")}
  data-case-ids={experience.caseStudies.map((link) => link.id).join(",")}
>
  <summary class="flex cursor-pointer list-none flex-col gap-3 text-left outline-none">
    <div class="flex flex-col gap-2 sm:flex-row sm:items-start sm:justify-between">
      <div class="flex flex-col">
        <p class="text-sm font-medium text-text-secondary">
          <span class="confidential-only">{experience.org_confidential}</span>
          <span class="public-only">{experience.org_public}</span>
        </p>
        <p class="text-xl font-semibold text-text-primary">
          <span class="confidential-only">{experience.role_confidential}</span>
          <span class="public-only">{experience.role_public}</span>
        </p>
      </div>
      <p class="text-sm font-medium text-text-muted">
        <span class="confidential-only">{experience.rangeConfidential}</span>
        <span class="public-only">{experience.rangePublic}</span>
      </p>
    </div>
    <p class="text-sm text-text-secondary">{scopeLine}</p>
  </summary>
  <div class="flex flex-col gap-4 border-t border-border/60 pt-4">
    <ul class="flex list-disc flex-col gap-2 pl-5 text-sm text-text-secondary">
      {experience.impacts.map((impact) => (
        <li>{impact}</li>
      ))}
    </ul>
    {experience.caseStudies.length > 0 && (
      <div class="flex flex-wrap gap-2" aria-label="Linked case studies">
        {experience.caseStudies.map((caseStudy) => (
          <a
            href={caseStudy.url}
            data-astro-transition="animate"
            class="inline-flex items-center rounded-full border border-border px-3 py-1 text-xs font-semibold text-text-secondary transition hover:border-accent hover:text-text-primary focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-accent"
          >
            {caseStudy.title}
          </a>
        ))}
      </div>
    )}
  </div>
</details>
