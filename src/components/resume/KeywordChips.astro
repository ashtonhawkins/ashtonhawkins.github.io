---
interface Props {
  keywords: string[];
  activeTags: string[];
}

const { keywords, activeTags } = Astro.props as Props;
---

<section class="flex flex-col gap-4" aria-label="Filter by skill">
  <h2 class="text-lg font-semibold text-text-primary">Keywords & skills</h2>
  <style is:inline>
    [data-keyword-chip] {
      border-radius: 9999px;
      border: 1px solid var(--border);
      background: var(--background);
      color: var(--text-2);
      transition: transform 120ms ease, border 120ms ease, background 120ms ease, color 120ms ease;
    }
    [data-keyword-chip][data-active="true"] {
      background: var(--accent);
      border-color: var(--accent);
      color: var(--background);
    }
    [data-keyword-chip]:focus-visible {
      outline: 2px solid var(--accent);
      outline-offset: 2px;
    }
    [data-keyword-chip][data-active="false"]:hover {
      border-color: var(--accent);
      color: var(--text-1);
    }
  </style>
  <div class="flex flex-wrap gap-2" data-keyword-container>
    {keywords.map((keyword) => {
      const isActive = activeTags.includes(keyword.toLowerCase());
      return (
        <button
          type="button"
          class="px-4 py-2 text-sm font-medium"
          data-keyword-chip
          data-tag={keyword.toLowerCase()}
          data-active={isActive ? "true" : "false"}
          aria-pressed={isActive ? "true" : "false"}
        >
          {keyword}
        </button>
      );
    })}
  </div>
</section>
